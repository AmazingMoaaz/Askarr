name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, arm64]
        exclude:
          # Exclude combinations that aren't commonly used
          - os: windows-latest
            arch: arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Get version from version.txt
        id: get_version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT
        shell: bash
          
      - name: Build project
        run: |
          cd Askarr.WebApi/ClientApp
          npm install
          npm run build
          cd ../
          # Create directory if it doesn't exist
          mkdir -p publish
          # Copy all necessary files to the publish directory
          cp -r * publish/ || true
          # Add version information
          echo "VERSION=${{ steps.get_version.outputs.VERSION }}" > publish/version.txt
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> publish/version.txt
          echo "VCS_REF=${{ github.sha }}" >> publish/version.txt
          # Verify publish directory has content
          ls -la publish/
        shell: bash
          
      - name: Create ZIP archive
        run: |
          # Make sure we're in the root directory
          cd $GITHUB_WORKSPACE
          # Create ZIP with OS and architecture in the filename
          zip -r Askarr-v${{ steps.get_version.outputs.VERSION }}-${{ matrix.os }}-${{ matrix.arch }}.zip Askarr.WebApi/publish/
          # Verify ZIP was created
          ls -la *.zip
        shell: bash
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: askarr-${{ matrix.os }}-${{ matrix.arch }}
          path: Askarr-v${{ steps.get_version.outputs.VERSION }}-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Display structure of downloaded files
        run: ls -R
        shell: bash
        
      - name: Get version from version.txt
        id: get_version
        run: |
          VERSION=$(find . -name "version.txt" -exec cat {} \; | grep VERSION | cut -d'=' -f2 | head -n 1)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        shell: bash
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Askarr v${{ steps.get_version.outputs.VERSION }}
          files: |
            **/Askarr-v*.zip
          draft: false
          prerelease: false
          generate_release_notes: true 